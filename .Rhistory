library(cmdline.arguments)
cmdArgs <- c('--go', 'abc', 'efd', '-g', 'my world', '--garage', 'no', '-f', '-v')
parserArgs <- list(c('-g', '--garage'), '--go', '-f', '-v')
parserArgsRequired <- rep(TRUE, 4)
helpArg <- '--help'
sarg <- '-'
larg <- '--'
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
cmdline.arguments:::match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
library(cmdline.arguments)
cmdArgs <- c('--go', 'abc', 'efd', '-g', 'my world', '--garage', 'no', '-f', '-v')
parserArgs <- list(c('-g', '--garage'), '--go', '-f', '-v')
parserArgsRequired <- rep(TRUE, 4)
helpArg <- '--help'
sarg <- '-'
larg <- '--'
cmdline.arguments:::match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
library(cmdline.arguments)
cmdArgs <- c('--go', 'abc', 'efd', '-g', 'my world', '--garage', 'no', '-f', '-v')
parserArgs <- list(c('-g', '--garage'), '--go', '-f', '-v')
parserArgsRequired <- rep(TRUE, 4)
helpArg <- '--help'
sarg <- '-'
larg <- '--'
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
library(cmdline.arguments)
cmdline.arguments::
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
trace(match_args, edit = TRUE)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
trace(match_args, edit = TRUE)
rm(match_args)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
trace(match_args, edit = TRUE)
larg)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
sarg
larg
cmdArgs
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
attr(cmdArgPositions, "argLen")
cmdArgs[cmdArgPositions]
attr(cmdArgPositions, "argLen")
argPos
library(cmdline.arguments)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
library(cmdline.arguments)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
library(cmdline.arguments)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
library(cmdline.arguments)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
trace(match_args, edit = TRUE)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
trace(match_args, edit = TRUE)
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
parserArgsOrder
parserArgs
cmdArgs
cmdArgPositions
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
.Call(`_cmdline_arguments_match_args_c`, cmdArgs, cmdArgPositions,
attr(cmdArgPositions, "next"), parserArgs, parserArgsOrder,
parserArgsRequired, helpArg)
cmdArgPositions
parserArgs
parserArgsOrder
cmdArgs[cmdArgPositions]
.Call(`_cmdline_arguments_match_args_c`, cmdArgs, cmdArgPositions,
attr(cmdArgPositions, "next"), parserArgs, parserArgsOrder,
rep(FALSE, 4), helpArg)
.Call(`_cmdline_arguments_match_args_c`, cmdArgs, cmdArgPositions - 1,
attr(cmdArgPositions, "next") - 1, parserArgs, parserArgsOrder -1,
rep(FALSE, 4), helpArg)
.Call(`_cmdline_arguments_match_args_c`, cmdArgs, cmdArgPositions - 1,
attr(cmdArgPositions, "next") - 1, parserArgs, parserArgsOrder -1,
parserArgsRequired, helpArg)
attr(cmdArgPositions, "next") - 1
cmdArgPositions - 1
cmdArgs <- c('--positive', 'abc', 'd', '-f', 'ef', 'hg', '-p', 'ff')
parserArgs <- list(c('-h', '--help'), '-f', c('-v', '--verbose'))
required <- c(TRUE, TRUE, FALSE)
argPos <- find_args(cmdArgs, '-', '--')
argOrder <- cmdline.arguments:::order_args(cmdArgs, argPos)
argmatch <- cmdline.arguments::_cmdline_arguments_match_args_c(cmdArgs,
parserArgs,
argOrder,
parserOrder,
required,
argPos,
'--help')
cmdArgs <- c('--positive', 'abc', 'd', '-f', 'ef', 'hg', '-p', 'ff')
parserArgs <- list(c('-h', '--help'), '-f', c('-v', '--verbose'))
required <- c(TRUE, TRUE, FALSE)
argPos <- find_args(cmdArgs, '-', '--')
argOrder <- cmdline.arguments:::order_args(cmdArgs, argPos)
parserOrder <- order_args(sapply(parserArgs, tail, 1),
find_args(sapply(parserArgs, tail, 1),
'-', '--'))
parserOrder <- order_args(sapply(parserArgs, tail, 1),
find_args(sapply(parserArgs, tail, 1)
,'-', '--'))
find_args(sapply(parserArgs, tail, 1)
,'-', '--')
cmdArgs <- c('--positive', 'abc', 'd', '-f', 'ef', 'hg', '-p', 'ff')
parserArgs <- list(c('-p', '--positive'), '-f', c('-v', '--verbose'))
required <- c(TRUE, TRUE, FALSE)
argPos <- find_args(cmdArgs, '-', '--')
argOrder <- cmdline.arguments:::order_args(cmdArgs, argPos)
parserOrder <- order_args(sapply(parserArgs, tail, 1),
find_args(sapply(parserArgs, tail, 1)
,'-', '--'))
cmdArgs <- c('--positive', 'abc', 'd', '-f', 'ef', 'hg', '-p', 'ff')
parserArgs <- list(c('-p', '--positive'), '-f', c('-v', '--verbose'))
required <- c(TRUE, TRUE, FALSE)
argPos <- find_args(cmdArgs, '-', '--')
argOrder <- cmdline.arguments:::order_args(cmdArgs, argPos)
parserOrder <- order_args(sapply(parserArgs, tail, 1),
find_args(sapply(parserArgs, tail, 1)
,'-', '--'))
parserOrder <- cmdline.arguments:::order_args(sapply(parserArgs, tail, 1),
find_args(sapply(parserArgs, tail, 1)
,'-', '--'))
argmatch <- .Call(cmdline.arguments::_cmdline_arguments_match_args_ccmdArgs,
parserArgs,
argOrder,
parserOrder,
required,
argPos,
'--help')
argmatch <- .Call(cmdline.arguments:::`_cmdline_arguments_match_args_ccmdArgs`,
parserArgs,
argOrder,
parserOrder,
required,
argPos,
'--help')
argmatch <- .Call(cmdline.arguments:::_cmdline_arguments_match_args_ccmdArgs,
parserArgs,
argOrder,
parserOrder,
required,
argPos,
'--help')
cmdline.arguments:::_cmdline_arguments_match_args_ccmdArgs
cmdline.arguments:::`_cmdline_arguments_match_args_ccmdArgs`
argmatch <- .Call(cmdline.arguments:::`_cmdline_arguments_match_args_c`,
cmdArgs,
parserArgs,
argOrder,
parserOrder,
required,
argPos,
'--help')
argOrder
library(cmdline.arguments)
cmdArgs <- c('--go', 'abc', 'efd', '-g', 'my world', '--garage', 'no', '-f', '-v')
parserArgs <- list(c('-g', '--garage'), '--go', '-f', '-v')
parserArgsRequired <- rep(TRUE, 4)
helpArg <- '--help'
sarg <- '-'
larg <- '--'
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
library(cmdline.arguments)
cmdArgs <- c('--go', 'abc', 'efd', '-g', 'my world', '--garage', 'no', '-f', '-v')
parserArgs <- list(c('-g', '--garage'), '--go', '-f', '-v')
parserArgsRequired <- rep(TRUE, 4)
helpArg <- '--help'
sarg <- '-'
larg <- '--'
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
library(cmdline.arguments)
cmdArgs <- c('--go', 'abc', 'efd', '-g', 'my world', '--garage', 'no', '-f', '-v')
parserArgs <- list(c('-g', '--garage'), '--go', '-f', '-v')
parserArgsRequired <- rep(TRUE, 4)
helpArg <- '--help'
sarg <- '-'
larg <- '--'
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
library(cmdline.arguments)
cmdArgs <- c('--go', 'abc', 'efd', '-g', 'my world', '--garage', 'no', '-f', '-v')
parserArgs <- list(c('-g', '--garage'), '--go', '-f', '-v')
parserArgsRequired <- rep(TRUE, 4)
helpArg <- '--help'
sarg <- '-'
larg <- '--'
match_args(cmdArgs,
parserArgs,
parserArgsRequired,
helpArg,
sarg,
larg)
nchar("Et70*V$Xw&NlCg68AvWW")
nchar("X3h6^jjIuwazmwYI47")
?rlang::abort
Rstudio
?trae
?trace
?recover
oldOpt <- options(error = recover); sum(LETTERS[1:6]); options(oldOpt);
getOption(error)
quit()
q
myFit <- lm(y ~ x, data = xy, weights = w)
quit()
q
?dump.frames
?trace
`?s`
?s
?debug
R.home()
path.expand(R.home())
?path.expand
path.expand(c('A', 'B'))
path.expand("~/foo")
R.home()
?R.home
R.home('etc')
R.home('include')
R.home('share')
rbind(home = R.home(),
bin  = R.home("bin")) # often a sub directory of 'home'
head(C:/Users/olive/R/R-cran/R-4.0.3/bin/x64)
head(installed.packages())
pkg <- installed.packages()
rownames(pkg)
rownames(pkg) == 'stats'
pkg[rownames(pkg) == 'stats', ]
R.home('include')
library(cmdline.arguments)
env <- Sys.getenv()
envnames <- names(env)
rnames <- envnames[startsWith(envnames, "R_")]
cached_names <- rnames
ld_lib_path <- Sys.getenv("LD_LIBRARY_PATH")
if (ld_lib_path != "") {
cached_names <- c("LD_LIBRARY_PATH", rnames)
}
gsub('\\', '/', paste0(cached_names, "=", env[cached_names]))
gsub('\\\\', '/', paste0(cached_names, "=", env[cached_names]))
library(cmdline.arguments)
