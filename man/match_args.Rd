% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_args.R
\name{match_args}
\alias{match_args}
\title{Match command arguments against a list of parser arguments}
\usage{
match_args(
  cmdArgs = commandArgs(TRUE),
  parserArgs,
  parserArgsRequired,
  helpArg,
  sarg,
  larg
)
}
\arguments{
\item{cmdArgs}{vector of commandline arguments. Defaults to commandArgs(TRUE)}

\item{parserArgs}{arguments to be searched for}

\item{parserArgsRequired}{logical vector indicaing whether an argument is strictly required}

\item{helpArg}{the argument used if one seeks help with the package}

\item{sarg}{short argument indicator (one letter arguments). No default}

\item{larg}{long argument indicator (one or more letter).}
}
\description{
This function can be used to interact with the low-level
functionality of the cmdline.arguments package. The match_args function takes
a vector of commandline argmuments, parser arguments and other descriptors
and returns a named list of extracted value from cmdArgs. The interface is however not user-friendly.
}
\examples{
cmdArgs <- c('--go', 'abc', 'efd', '-g', 'my world', '--garage', 'no', '-f', '-v')
parserArgs <- list(c('-g', '--garage'), '--go', '-f', '-v')
parserArgsRequired <- rep(TRUE, 4)
helpArg <- '--help'
sarg <- '-'
larg <- '--'
match_args(cmdArgs,
           parserArgs,
           parserArgsRequired,
           helpArg,
           sarg,
           larg)
}
