
export(find_args)
export(match_args)
export(order_args)
export(getflags)
export(getlflag)
export(getsflag)
export(getnarg)
export(getnargparsed)
export(getname)
export(isflag)
export(isrequired)
export(createArgument)
export(setUnparsedArgs)
export(demandReady)
if(getRversion() >= "3.6.0") {
  S3method(getflags, cmd_arg)
  S3method(getsflag, cmd_arg)
  S3method(getlflag, cmd_arg)
  S3method(extract_ptr, cmd_arg)
  S3method(getflags, cmd_parser)
  S3method(getsflag, cmd_parser)
  S3method(getlflag, cmd_parser)
  S3method(extract_ptr, cmd_parser)
  S3method(setUnparsedArgs, cmd_arg)
  S3method(setUnparsedArgs, cmd_parser)
  S3method(isflag, cmd_arg)
  S3method(isflag, cmd_parser)
  S3method(getnarg, cmd_arg)
  S3method(getnarg, cmd_parser)
  S3method(getnargparsed, cmd_arg)
  S3method(getnargparsed, cmd_parser)
  S3method(getname, cmd_arg)
  S3method(getname, cmd_parser)
  S3method(isrequired, cmd_arg)
  S3method(isrequired, cmd_parser)
  S3method(demandReady, cmd_arg)
  S3method(demandReady, cmd_parser)
}
importFrom(R6, R6Class)
importFrom(utils, head, tail)
importFrom(Rcpp, evalCpp)
useDynLib(cmdline.arguments, .registration = TRUE)
